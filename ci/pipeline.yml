---
resources:
- name: pcf-start-stop
  type: git
  source:
    uri: https://github.com/making/pcf-start-stop
    branch: master

jobs:
- name: opsmgr-stop
  plan:
  - get: pcf-start-stop
    passed:
    - bosh-stop-cf
  - task: opsmgr-stop
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
      GCP_PROJECT_ID: {{gcp-project-id}}
      SUBCMD: stop
      FILTER: tags:pcf-opsmanager
    config:
      <<: *GCLOUD
- name: opsmgr-start
  plan:
  - get: pcf-start-stop
  - task: opsmgr-start
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
      GCP_PROJECT_ID: {{gcp-project-id}}
      SUBCMD: start
      FILTER: tags:pcf-opsmanager
    config:
      <<: *GCLOUD
- name: director-stop
  plan:
  - get: pcf-start-stop
    passed:
    - bosh-stop-prometheus
    - bosh-stop-cf
  - task: director-stop
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
      GCP_PROJECT_ID: {{gcp-project-id}}
      SUBCMD: stop
      FILTER: labels.deployment:p-bosh
    config:
      <<: *GCLOUD
- name: director-start
  plan:
  - get: pcf-start-stop
  - task: director-start
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
      GCP_PROJECT_ID: {{gcp-project-id}}
      SUBCMD: start
      FILTER: labels.deployment:p-bosh
    config:
      <<: *GCLOUD
- name: bosh-stop-cf
  plan:
  - get: pcf-start-stop
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: cf
      SUBCMD: 'stop --hard --force --skip-drain'
    config:
      <<: *BOSH_CLI
- name: bosh-start-cf
  plan:
  - get: pcf-start-stop
    passed:
    - opsmgr-start
    - director-start
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: cf
      SUBCMD: start
    config:
      <<: *BOSH_CLI
- name: bosh-run-errand-smoke-tests
  plan:
  - get: pcf-start-stop
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: cf
      SUBCMD: 'run-errand smoke-tests'
    config:
      <<: *BOSH_CLI
- name: bosh-stop-metrics-forwarder
  plan:
  - get: pcf-start-stop
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: p-metrics-forwarder
      SUBCMD: 'stop --hard --force'
    config:
      <<: *BOSH_CLI
- name: bosh-start-metrics-forwarder
  plan:
  - get: pcf-start-stop
    passed:
    - opsmgr-start
    - director-start
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: p-metrics-forwarder
      SUBCMD: start
    config:
      <<: *BOSH_CLI
- name: bosh-stop-prometheus
  plan:
  - get: pcf-start-stop
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: prometheus
      SUBCMD: 'stop --hard --force'
    config:
      <<: *BOSH_CLI
- name: bosh-start-prometheus
  plan:
  - get: pcf-start-stop
    passed:
    - opsmgr-start
    - director-start
  - task: bosh
    params:
      <<: *OPSMGR
      <<: *BOSH
      DEPLOYMENT: prometheus
      SUBCMD: start
    config:
      <<: *BOSH_CLI

params:
  opsmgr: &OPSMGR
    OPSMGR_HOST: {{opsmgr-host}}
    OPSMGR_SSH_USER: {{opsmgr-ssh-user}}
    OPSMGR_SSH_KEY: {{opsmgr-ssh-key}}
  bosh: &BOSH
    BOSH_CLIENT: {{bosh-client}}
    BOSH_ENVIRONMENT: {{bosh-environment}}
    BOSH_CLIENT_SECRET: {{bosh-client-secret}}
    BOSH_CA_CERT: {{bosh-ca-cert}}
  tasks:
    gcloud: &GCLOUD
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: google/cloud-sdk
          tag: slim
      inputs:
      - name: pcf-start-stop
      run:
        path: bash
        args: 
        - -c
        - |
          set -e

          cat <<EOF > key.json
          ${GCP_SERVICE_ACCOUNT_KEY}
          EOF
          gcloud auth activate-service-account --key-file key.json --project ${GCP_PROJECT_ID}
          NAME=`gcloud compute instances list --filter="${FILTER}" | tail -1 | awk '{print $1}'`
          ZONE=`gcloud compute instances list --filter="${FILTER}" | tail -1 | awk '{print $2}'`
          echo "${SUBCMD} > ${NAME} ${ZONE}"
          gcloud compute instances ${SUBCMD} ${NAME} --zone ${ZONE}
          gcloud compute instances list
    bosh-cli: &BOSH_CLI 
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: starkandwayne/concourse
      inputs:
      - name: pcf-start-stop
      run:
        path: bash
        args: 
        - -c
        - |
          set -e

          cat <<EOF > ~/opsmgr_ssh
          ${OPSMGR_SSH_KEY}
          EOF
          chmod 400 ~/opsmgr_ssh
          SSH_OPTS="-oStrictHostKeyChecking=no -i ~/opsmgr_ssh"
          SSH_TARGET=${OPSMGR_SSH_USER}@${OPSMGR_HOST}

          ssh ${SSH_OPTS} ${SSH_TARGET} "
          set -e

          export BOSH_ENVIRONMENT=${BOSH_ENVIRONMENT}
          export BOSH_CLIENT=${BOSH_CLIENT}
          export BOSH_CLIENT_SECRET=${BOSH_CLIENT_SECRET}
          export BOSH_CA_CERT='${BOSH_CA_CERT}'

          D=\`ls -t /var/tempest/workspaces/default/deployments/${DEPLOYMENT}* | head -1 | xargs basename | sed 's/.yml//'\`
          if [ "x\${D}" == "x" ];then
            D=${DEPLOYMENT}
          fi
          echo "Deployment: \${D}"
          bosh2 -n -d \${D} ${SUBCMD}
          bosh2 vms
          "

